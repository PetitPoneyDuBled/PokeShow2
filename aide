Alors, maintenant la gestion des attaques avec les types fonctionnent bien , maintenant j'aimerai que comme dans le jeu pokémon, lorsque je fais une attaque super efficace , n'est pas très efficace, j'aimerai que ce soit affiché après avoir infliger les degats .
Voici, mon code:
combat4_results.blade.php:
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Combat 4 battle</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <meta name="csrf-token" content="{{ csrf_token() }}">
</head>
<body>
    @include('partials.navbar')
    <h1>Votre Pokémon : {{ $chosenPokemon->nom }}</h1>
    <p id="allie-pv">Pv : {{ $chosenPokemon->pv }}</p>
    <p id="allie-atq">Atq : {{ $chosenPokemon->atq }}</p>
    <p id="allie-def">Def : {{ $chosenPokemon->def }}</p>
    <p id="allie-atqspe">Atqspe : {{ $chosenPokemon->atqspe }}</p>
    <p id="allie-defspe">Defspe : {{ $chosenPokemon->defspe }}</p>
    <p id="allie-vit">Vit : {{ $chosenPokemon->vit }}</p>
    Attaques :
            <ul>
                @foreach($chosenPokemon->attaques as $attaque)
                    <li>
                        {{ $attaque->nom }}
                    </li>
                @endforeach
            </ul>
    <div class="container">
        <h1>Combat entre {{ $chosenPokemon->nom }} et {{ $randomEnemyPokemon->nom }}</h1>
        <form action="{{ route('combat4.attack') }}" method="POST" id="attack-form">
            @csrf
            <input type="hidden" name="chosen_pokemon_id" value="{{ $chosenPokemon->id }}">
            <input type="hidden" name="enemy_pokemon_id" value="{{ $randomEnemyPokemon->id }}">
            <label for="attaque_id">Choisissez une attaque pour {{ $chosenPokemon->nom }} :</label>
            <select name="attaque_id" id="attaque_id">
                @foreach($chosenPokemon->attaques as $attaque)
                    <option value="{{ $attaque->id }}">{{ $attaque->nom }}</option>
                @endforeach
            </select>
            <button type="submit">Attaquer</button>
        </form>
        @if (session('degats'))
            <div>
                <p>{{ $chosenPokemon->nom }} a infligé {{ session('degats') }} dégâts à {{ $randomEnemyPokemon->nom }} avec l'attaque {{ session('attaque_nom') }} !</p>
            </div>
        @endif
    </div>
    <h1>Pokémon adverse : {{ $randomEnemyPokemon->nom }}</h1>
    <p id="ennemie-pv">Pv : {{ $randomEnemyPokemon->pv }}</p>
    <p id="ennemie-atq">Atq : {{ $randomEnemyPokemon->atq }}</p>
    <p id="ennemie-def">Def : {{ $randomEnemyPokemon->def }}</p>
    <p id="ennemie-atqspe">Atqspe : {{ $randomEnemyPokemon->atqspe }}</p>
    <p id="ennemie-defspe">Defspe : {{ $randomEnemyPokemon->defspe }}</p>
    <p id="ennemie-vit">Vit : {{ $randomEnemyPokemon->vit }}</p>
    Attaques :
    <ul>
        @foreach($randomEnemyPokemon->attaques as $attaque)
            <li>
                {{ $attaque->nom }}
            </li>
        @endforeach
    </ul>
    <script>
    function updateStats(idPrefix, stats) {
        document.getElementById(`${idPrefix}-atq`).textContent = `Atq : ${stats.atq}`;
        document.getElementById(`${idPrefix}-def`).textContent = `Def : ${stats.def}`;
        document.getElementById(`${idPrefix}-atqspe`).textContent = `Atqspe : ${stats.atqspe}`;
        document.getElementById(`${idPrefix}-defspe`).textContent = `Defspe : ${stats.defspe}`;
        document.getElementById(`${idPrefix}-vit`).textContent = `Vit : ${stats.vit}`;
    }
    document.getElementById('attack-form').addEventListener('submit', function(event) {
        event.preventDefault();
        let formData = new FormData(this);
        let url = this.getAttribute('action');
        fetch(url, {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
            },
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error ${response.status}`);
            }
            return response.text();
        })
        .then(text => {
            try {
                return JSON.parse(text);
            } catch (error) {
                console.error("Erreur lors de la conversion de la réponse en JSON :", error);
                console.log("Réponse brute du serveur :", text);
                throw error;
            }
        })
        .then(data => {
            if (data.success) {
                let ennemiePvElement = document.getElementById('ennemie-pv');
                let ennemiePv = parseInt(ennemiePvElement.textContent.split(' ')[2]) - data.degats;
                ennemiePvElement.textContent = `Pv : ${Math.max(ennemiePv, 0)}`;
                updateStats('allie', data.stat_changes.chosen_pokemon);
                updateStats('ennemie', data.stat_changes.enemy_pokemon);
                if (data.degats > 0) {
                    alert(`${data.chosen_pokemon_nom} a infligé ${data.degats} dégâts à ${data.enemy_pokemon_nom} avec l'attaque ${data.attaque_nom} ! Les statistiques ont été mises à jour.`);
                }
                if (data.message) {
                    alert("Vous avez utilisé une attaque de statut !");
                    alert(data.message);
                }
                if (data.stat_changes.stat_levels.enemy_pokemon.niveauAtq === -6) {
                    alert("L'attaque de l'adversaire ne peut plus être diminuée !");
                } else if (data.stat_changes.stat_levels.enemy_pokemon.niveauAtq === 6) {
                    alert("L'attaque de l'adversaire ne peut plus être augmentée !");
            } else {
                alert('Une erreur est survenue. Veuillez réessayer.');
            }
        });
});
</script>
</body>
</html>
Dans PokemonController.php:
    public function combat4Attack(Request $request)
    {
        $request->validate([
            'chosen_pokemon_id' => 'required|exists:pokemon,id',
            'enemy_pokemon_id' => 'required|exists:pokemon,id',
            'attaque_id' => 'required|exists:attaque,id',
        ]);
        $chosenPokemon = Pokemon::with('attaques')->find($request->chosen_pokemon_id);
        $chosenPokemon = session('chosenPokemon');
        $enemyPokemon = session('randomEnemyPokemon');
        $attaque = Attaque::find($request->attaque_id);
        $degats = 0;
        $message = "";
        $message_efficace = "";
        if (strtolower($attaque->Catégorie) == 'physique') {
            $niveau = 100;
            $puissance = $attaque->puissance;
            $attaqueStat = $chosenPokemon->atq;
            $defenseStat = $enemyPokemon->def;
            $degats = round(((((2 * $niveau) / 5 + 2) * $puissance * $attaqueStat / $defenseStat) / 50) + 2);
            $typeMultiplier = $enemyPokemon->getTypeDamageMultiplier($attaque->type_id);
            $degats = round($degats * $typeMultiplier);
            if ($typeMultiplier > 1) {
                $message_efficace .= "C'est super efficace ! ";
            } else if ($typeMultiplier == 0) {
                $message_efficace .= "Ca n'affecte pas le pokémon ennemie ";
            } else if ($typeMultiplier > 0 && $typeMultiplier < 1) {
                $message_efficace .= "Ce n'est pas très efficace... ";
            }
        } else if (strtolower($attaque->Catégorie) == 'spéciale'){
            $niveau = 100;
            $puissance = $attaque->puissance;
            $attaqueStat = $chosenPokemon->atqspe;
            $defenseStat = $enemyPokemon->defspe;
            $degats = round(((((2 * $niveau) / 5 + 2) * $puissance * $attaqueStat / $defenseStat) / 50) + 2);
            $typeMultiplier = $enemyPokemon->getTypeDamageMultiplier($attaque->type_id);
            $degats = round($degats * $typeMultiplier);
            if ($typeMultiplier > 1) {
                $message_efficace .= "C'est super efficace ! ";
            } else if ($typeMultiplier == 0) {
                $message_efficace .= "Ca n'affecte pas le pokémon ennemie ";
            } else if ($typeMultiplier > 0 && $typeMultiplier < 1) {
                $message_efficace .= "Ce n'est pas très efficace... ";
            }
        } else if (strtolower($attaque->Catégorie) == 'statut'){
            if ($attaque->modification_attaque !== 0 || $attaque->modification_defense !== 0 || $attaque->modification_attaque_speciale !== 0 || $attaque->modification_defense_speciale !== 0 || $attaque->modification_vitesse !== 0) {
                $enemyPokemon->niveauAtq += $attaque->modification_attaque;
                $enemyPokemon->niveauAtq = max(-6, min(6, $enemyPokemon->niveauAtq));
                $enemyPokemon->atq = $this->applyStatModifier($enemyPokemon->atq_base, $enemyPokemon->niveauAtq);
                $enemyPokemon->niveauDef += $attaque->modification_defense;
                $enemyPokemon->niveauDef = max(-6, min(6, $enemyPokemon->niveauDef));
                $enemyPokemon->def = $this->applyStatModifier($enemyPokemon->def_base, $enemyPokemon->niveauDef);
                $enemyPokemon->niveauAtqspe += $attaque->modification_attaque_speciale;
                $enemyPokemon->niveauAtqspe = max(-6, min(6, $enemyPokemon->niveauAtqspe));
                $enemyPokemon->atqspe = $this->applyStatModifier($enemyPokemon->atqspe_base, $enemyPokemon->niveauAtqspe);
                $enemyPokemon->niveauDefspe += $attaque->modification_defense_speciale;
                $enemyPokemon->niveauDefspe = max(-6, min(6, $enemyPokemon->niveauDefspe));
                $enemyPokemon->defspe = $this->applyStatModifier($enemyPokemon->defspe_base, $enemyPokemon->niveauDefspe);
                $enemyPokemon->niveauVit += $attaque->modification_vitesse;
                $enemyPokemon->niveauVit = max(-6, min(6, $enemyPokemon->niveauVit));
                $enemyPokemon->vit = $this->applyStatModifier($enemyPokemon->vit_base, $enemyPokemon->niveauVit);
                $chosenPokemon->niveauAtq += $attaque->modification_attaque_allie;
                $chosenPokemon->niveauAtq = max(-6, min(6, $chosenPokemon->niveauAtq));
                $chosenPokemon->atq = $this->applyStatModifier($chosenPokemon->atq_base, $chosenPokemon->niveauAtq);
                $chosenPokemon->niveauDef += $attaque->modification_defense_allie;
                $chosenPokemon->niveauDef = max(-6, min(6, $chosenPokemon->niveauDef));
                $chosenPokemon->def = $this->applyStatModifier($chosenPokemon->def_base, $chosenPokemon->niveauDef);
                $chosenPokemon->niveauAtqspe += $attaque->modification_attaque_speciale_allie;
                $chosenPokemon->niveauAtqspe = max(-6, min(6, $chosenPokemon->niveauAtqspe));
                $chosenPokemon->atqspe = $this->applyStatModifier($chosenPokemon->atqspe_base, $chosenPokemon->niveauAtqspe);
                $chosenPokemon->niveauDefspe += $attaque->modification_defense_speciale_allie;
                $chosenPokemon->niveauDefspe = max(-6, min(6, $chosenPokemon->niveauDefspe));
                $chosenPokemon->defspe = $this->applyStatModifier($chosenPokemon->defspe_base, $chosenPokemon->niveauDefspe);
                $chosenPokemon->niveauVit += $attaque->modification_vitesse_allie;
                $chosenPokemon->niveauVit = max(-6, min(6, $chosenPokemon->niveauVit));
                $chosenPokemon->vit = $this->applyStatModifier($chosenPokemon->vit_base, $chosenPokemon->niveauVit);
            }        
            if ($attaque->modification_attaque !== 0) {
                $message .= "L'attaque de {$enemyPokemon->nom} a été modifiée de {$attaque->modification_attaque}. ";
            }
            if ($attaque->modification_defense !== 0) {
                $message .= "La défense de {$chosenPokemon->nom} a été modifiée de {$attaque->modification_defense}. ";
            }
            if ($attaque->modification_attaque_speciale !== 0) {
                $message .= "L'attaque spéciale de {$chosenPokemon->nom} a été modifiée de {$attaque->modification_attaque_speciale}. ";
            }
            if ($attaque->modification_defense_speciale !== 0) {
                $message .= "La défense spéciale de {$chosenPokemon->nom} a été modifiée de {$attaque->modification_defense_speciale}. ";
            }
            if ($attaque->modification_vitesse !== 0) {
                $message .= "La vitesse de {$chosenPokemon->nom} a été modifiée de {$attaque->modification_vitesse}. ";
            }
        }
        $enemyPokemon->save();
        $chosenPokemon->save();
        $response = [
            'message_efficace' => $message_efficace,
            'message' => $message,
            'success' => true,
            'degats' => $degats,
            'chosen_pokemon_nom' => $chosenPokemon->nom,
            'enemy_pokemon_nom' => $enemyPokemon->nom,
            'attaque_nom' => $attaque->nom,
            'stat_changes' => [
                'chosen_pokemon' => [
                    'atq' => $chosenPokemon->atq,
                    'def' => $chosenPokemon->def,
                    'atqspe' => $chosenPokemon->atqspe,
                    'defspe' => $chosenPokemon->defspe,
                    'vit' => $chosenPokemon->vit,
                ],
                'enemy_pokemon' => [
                    'atq' => $enemyPokemon->atq,
                    'def' => $enemyPokemon->def,
                    'atqspe' => $enemyPokemon->atqspe,
                    'defspe' => $enemyPokemon->defspe,
                    'vit' => $enemyPokemon->vit,
                ],
                'stat_levels' => [
                    'enemy_pokemon' => [
                        'niveauAtq' => $enemyPokemon->niveauAtq,
                        'niveauDef' => $enemyPokemon->niveauDef,
                        'niveauAtqspe' => $enemyPokemon->niveauAtqspe,
                        'niveauDefspe' => $enemyPokemon->niveauDefspe,
                        'niveauVit' => $enemyPokemon->niveauVit,
                    ],
                    'chosen_pokemon' => [
                        'niveauAtq' => $chosenPokemon->niveauAtq,
                        'niveauDef' => $chosenPokemon->niveauDef,
                        'niveauAtqspe' => $chosenPokemon->niveauAtqspe,
                        'niveauDefspe' => $chosenPokemon->niveauDefspe,
                        'niveauVit' => $chosenPokemon->niveauVit,
                    ]
                ]
            ],
        ];
        return response()->json($response);
    }
    function getTypeDamageMultiplier($attackTypeId, $defenderType1Id, $defenderType2Id = null)
    {
        $typeChart = EfficaciteType::all()
            ->mapWithKeys(function ($efficacite) {
                return [[$efficacite->attaque_type_id, $efficacite->defense_type_id] => $efficacite->multiplicateur];
            })
            ->all();
    
        $multiplier = $typeChart[$attackTypeId][$defenderType1Id] ?? 1;
        if ($defenderType2Id) {
            $multiplier *= $typeChart[$attackTypeId][$defenderType2Id] ?? 1;
        }
        return $multiplier;
    }